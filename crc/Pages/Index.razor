@page "/"

@inject IJSRuntime JSRuntime
<div class="main @viewMode">
    @if (viewMode == "history")
    {
        <div id="history">
            @foreach (var card in crcm.Cards)
            {
                <div class="paper">
                    <CalcCard Card="@card" OnClick="UpdateInput" IsDisabled="true"></CalcCard>
                    <div style="width:100%;text-align:right; padding-right:16px;">
                        <button @onclick="@(e => crcm.RemoveCard(card))" title="Remove this Card" class="btn btn-danger"><span class="oi oi-circle-x"></span></button>
                        <button @onclick="@(e => crcm.Switch2CurrentCard(card))" title="Move to Home" class="btn btn-light"><span class="oi oi-action-undo"></span></button>
                    </div>
                </div>
            }
            @if (crcm.Cards == null || crcm.Cards.Count == 0)
            {
                <div class="alert alert-warning mt-5"><span class="oi oi-warning"></span> No Data!</div>
            }
        </div>
    }
    else if (viewMode == "trash")
    {
        <div id="trash">
            <div class="alert alert-warning mt-5"><span class="oi oi-warning"></span> Not Implemented!</div>
        </div>
    }
    else
    {
        <div id="current">
            <CalcCard Card="@crcm.CurrentCard" OnClick="UpdateInput" IsDisabled="false"></CalcCard>
        </div>
    }
    <div id="bottom"></div>
</div><!-- main end -->

<div class="sidebar">
    <nav class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">CRC</a>
        <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group mr-2" role="group" aria-label="View Mode">
                <button @onclick="@(e => selectViewMode("home"))" title="Home" class="btn btn-secondary"><span class="oi oi-home"></span></button>
                <button @onclick="@(e => selectViewMode("history"))" title="History" class="btn btn-secondary">
                    <span class="oi oi-clock"></span>
                    @if (crcm.Cards.Count > 0)
                    {
                        <span class="badge badge-danger badge-pill" style="margin-left:-14px;">@crcm.Cards.Count</span>
                    }
                </button>
                <button @onclick="@(e => selectViewMode("trash"))" title="Trash" class="btn btn-secondary"><span class="oi oi-trash"></span></button>
            </div>
            <div class="btn-group mr-2 d-none d-lg-block" role="group" aria-label="Links">
                <a href="https://github.com/rainydayprogrammer/crc/wiki" class="btn btn-secondary" target="_blank"><span class="oi oi-question-mark"></span></a>
            </div>
        </div>
    </nav>
    <table class="table table-sm table-borderless" @onclick="@(e => selectViewMode("home"))">
        <tr><td colspan="5" class="new-line">&nbsp;<span>@crcm.CurrentExpression</span></td></tr>
        <tr><td colspan="5" class="display"><span>@crcm.Input</span>&nbsp;</td></tr>
        <tr class="keys">
            <td><button @onclick="@crcm.ClearAll" title="Clear All" class="btn btn-danger btn-block">CA</button></td>
            <td><button @onclick="@crcm.ClearMemory" title="Clear Memory" class="btn btn-danger btn-block">CM</button></td>
            <td><button @onclick="@crcm.ClearExpression" title="Clear Line" class="btn btn-danger btn-block">CL</button></td>
            <td><button @onclick="@crcm.ClearEntry" title="Clear Entry" class="btn btn-danger btn-block">CE</button></td>
            <td><button @onclick="@crcm.ClearChar" title="Back Space" class="btn btn-danger btn-block">&larr;</button> </td>
        </tr>
        <tr class="keys">
            <td><button @onclick="@(e => crcm.AddNum("7"))" class="btn btn-light btn-block">7</button></td>
            <td><button @onclick="@(e => crcm.AddNum("8"))" class="btn btn-light btn-block">8</button></td>
            <td><button @onclick="@(e => crcm.AddNum("9"))" class="btn btn-light btn-block">9</button></td>
            <td><button @onclick="@(e => crcm.Operation("÷"))" class="btn btn-light btn-block">&divide;</button></td>
            <td><button @onclick="@crcm.ToggleSign" title="Change Sign" class="btn btn-light btn-block">&plusmn;</button></td>
        </tr>
        <tr class="keys">
            <td><button @onclick="@(e => crcm.AddNum("4"))" class="btn btn-light btn-block">4</button></td>
            <td><button @onclick="@(e => crcm.AddNum("5"))" class="btn btn-light btn-block">5</button></td>
            <td><button @onclick="@(e => crcm.AddNum("6"))" class="btn btn-light btn-block">6</button></td>
            <td><button @onclick="@(e => crcm.Operation("×"))" class="btn btn-light btn-block">×</button></td>
            <td><button @onclick="@(e => crcm.Operation("－"))" class="btn btn-light btn-block">&minus;</button></td>
        </tr>
        <tr class="keys">
            <td><button @onclick="@(e => crcm.AddNum("1"))" class="btn btn-light btn-block">1</button></td>
            <td><button @onclick="@(e => crcm.AddNum("2"))" class="btn btn-light btn-block">2</button></td>
            <td><button @onclick="@(e => crcm.AddNum("3"))" class="btn btn-light btn-block">3</button></td>
            <td><button @onclick="@(e => crcm.Operation("＋"))" class="btn btn-light btn-block">+</button></td>
            <td><button @onclick="@crcm.Grandtotal" class="btn btn-primary btn-block">&Sigma;</button></td>
        </tr>
        <tr class="keys">
            <td><button @onclick="@(e => crcm.AddNum("0"))" class="btn btn-light btn-block">0</button></td>
            <td><button @onclick="@crcm.AddDecimalPoint" class="btn btn-light btn-block">.</button></td>
            <td colspan="2"><button @onclick="@(e => crcm.AddLine("＋"))" class="btn btn-primary btn-block" title="M+">+&crarr;</button></td>
            <td><button @onclick="@(e => crcm.AddLine("－"))" class="btn btn-primary btn-block" title="M-">-&crarr;</button></td>
        </tr>
    </table>
</div>
@code{

    private CarriageReturnCalcModel crcm;

    private string viewMode = "home";

    protected override void OnInitialized()
    {
        crcm = new CarriageReturnCalcModel(JSRuntime);
    }

    private void UpdateInput(string rVal)
    {
        crcm.Input = rVal;
    }

    private void selectViewMode(string vmode)
    {
        viewMode = vmode;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender && viewMode == "home")
        {
            JSRuntime.InvokeAsync<bool>("scrollToElementId", "bottom");
        }
    }

    protected void Alert(string msg)
    {
        if (!string.IsNullOrWhiteSpace(msg))
        {
            JSRuntime.InvokeAsync<bool>("alert", msg);
        }
    }
}
